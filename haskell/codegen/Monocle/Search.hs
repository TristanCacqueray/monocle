{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DeriveAnyClass #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TypeApplications #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Monocle.Search where

import Control.Applicative ((<$>), (<*>), (<|>))
import qualified Control.Applicative as Hs
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty (..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Google.Protobuf.Timestamp
import qualified Monocle.TaskData
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import Proto3.Suite.JSONPB ((.:), (.=))
import qualified Proto3.Suite.JSONPB as HsJSONPB
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Unsafe.Coerce as Hs
import qualified Prelude as Hs

newtype SearchSuggestionsRequest = SearchSuggestionsRequest
  { searchSuggestionsRequestIndex ::
      Hs.Text
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SearchSuggestionsRequest where
  nameOf _ = (Hs.fromString "SearchSuggestionsRequest")

instance HsProtobuf.HasDefault SearchSuggestionsRequest

instance HsProtobuf.Message SearchSuggestionsRequest where
  encodeMessage
    _
    SearchSuggestionsRequest
      { searchSuggestionsRequestIndex =
          searchSuggestionsRequestIndex
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                searchSuggestionsRequestIndex
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SearchSuggestionsRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "index")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SearchSuggestionsRequest where
  toJSONPB (SearchSuggestionsRequest f1) =
    (HsJSONPB.object ["index" .= f1])
  toEncodingPB (SearchSuggestionsRequest f1) =
    (HsJSONPB.pairs ["index" .= f1])

instance HsJSONPB.FromJSONPB SearchSuggestionsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SearchSuggestionsRequest"
        (\obj -> (Hs.pure SearchSuggestionsRequest) <*> obj .: "index")
    )

instance HsJSONPB.ToJSON SearchSuggestionsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SearchSuggestionsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SearchSuggestionsRequest where
  declareNamedSchema _ =
    do
      let declare_index = HsJSONPB.declareSchemaRef
      searchSuggestionsRequestIndex <- declare_index Proxy.Proxy
      let _ =
            Hs.pure SearchSuggestionsRequest
              <*> HsJSONPB.asProxy declare_index
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SearchSuggestionsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("index", searchSuggestionsRequestIndex)]
                  }
            }
        )

data SearchSuggestionsResponse = SearchSuggestionsResponse
  { searchSuggestionsResponseTaskTypes ::
      Hs.Vector Hs.Text,
    searchSuggestionsResponseAuthors ::
      Hs.Vector Hs.Text,
    searchSuggestionsResponseApprovals ::
      Hs.Vector Hs.Text,
    searchSuggestionsResponsePriorities ::
      Hs.Vector Hs.Text,
    searchSuggestionsResponseSeverities ::
      Hs.Vector Hs.Text
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SearchSuggestionsResponse where
  nameOf _ = (Hs.fromString "SearchSuggestionsResponse")

instance HsProtobuf.HasDefault SearchSuggestionsResponse

instance HsProtobuf.Message SearchSuggestionsResponse where
  encodeMessage
    _
    SearchSuggestionsResponse
      { searchSuggestionsResponseTaskTypes =
          searchSuggestionsResponseTaskTypes,
        searchSuggestionsResponseAuthors =
          searchSuggestionsResponseAuthors,
        searchSuggestionsResponseApprovals =
          searchSuggestionsResponseApprovals,
        searchSuggestionsResponsePriorities =
          searchSuggestionsResponsePriorities,
        searchSuggestionsResponseSeverities =
          searchSuggestionsResponseSeverities
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    searchSuggestionsResponseTaskTypes
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    searchSuggestionsResponseAuthors
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    searchSuggestionsResponseApprovals
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    searchSuggestionsResponsePriorities
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    searchSuggestionsResponseSeverities
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure SearchSuggestionsResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 5)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "task_types")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "authors")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "approvals")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "priorities")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "severities")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB SearchSuggestionsResponse where
  toJSONPB (SearchSuggestionsResponse f1 f2 f3 f4 f5) =
    ( HsJSONPB.object
        [ "task_types" .= f1,
          "authors" .= f2,
          "approvals" .= f3,
          "priorities" .= f4,
          "severities" .= f5
        ]
    )
  toEncodingPB (SearchSuggestionsResponse f1 f2 f3 f4 f5) =
    ( HsJSONPB.pairs
        [ "task_types" .= f1,
          "authors" .= f2,
          "approvals" .= f3,
          "priorities" .= f4,
          "severities" .= f5
        ]
    )

instance HsJSONPB.FromJSONPB SearchSuggestionsResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "SearchSuggestionsResponse"
        ( \obj ->
            (Hs.pure SearchSuggestionsResponse) <*> obj .: "task_types"
              <*> obj .: "authors"
              <*> obj .: "approvals"
              <*> obj .: "priorities"
              <*> obj .: "severities"
        )
    )

instance HsJSONPB.ToJSON SearchSuggestionsResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SearchSuggestionsResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SearchSuggestionsResponse where
  declareNamedSchema _ =
    do
      let declare_task_types = HsJSONPB.declareSchemaRef
      searchSuggestionsResponseTaskTypes <-
        declare_task_types
          Proxy.Proxy
      let declare_authors = HsJSONPB.declareSchemaRef
      searchSuggestionsResponseAuthors <- declare_authors Proxy.Proxy
      let declare_approvals = HsJSONPB.declareSchemaRef
      searchSuggestionsResponseApprovals <- declare_approvals Proxy.Proxy
      let declare_priorities = HsJSONPB.declareSchemaRef
      searchSuggestionsResponsePriorities <-
        declare_priorities
          Proxy.Proxy
      let declare_severities = HsJSONPB.declareSchemaRef
      searchSuggestionsResponseSeverities <-
        declare_severities
          Proxy.Proxy
      let _ =
            Hs.pure SearchSuggestionsResponse
              <*> HsJSONPB.asProxy declare_task_types
              <*> HsJSONPB.asProxy declare_authors
              <*> HsJSONPB.asProxy declare_approvals
              <*> HsJSONPB.asProxy declare_priorities
              <*> HsJSONPB.asProxy declare_severities
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "SearchSuggestionsResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "task_types",
                            searchSuggestionsResponseTaskTypes
                          ),
                          ( "authors",
                            searchSuggestionsResponseAuthors
                          ),
                          ( "approvals",
                            searchSuggestionsResponseApprovals
                          ),
                          ( "priorities",
                            searchSuggestionsResponsePriorities
                          ),
                          ( "severities",
                            searchSuggestionsResponseSeverities
                          )
                        ]
                  }
            }
        )

newtype FieldsRequest = FieldsRequest
  { fieldsRequestVersion ::
      Hs.Text
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FieldsRequest where
  nameOf _ = (Hs.fromString "FieldsRequest")

instance HsProtobuf.HasDefault FieldsRequest

instance HsProtobuf.Message FieldsRequest where
  encodeMessage
    _
    FieldsRequest {fieldsRequestVersion = fieldsRequestVersion} =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                fieldsRequestVersion
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure FieldsRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "version")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB FieldsRequest where
  toJSONPB (FieldsRequest f1) = (HsJSONPB.object ["version" .= f1])
  toEncodingPB (FieldsRequest f1) =
    (HsJSONPB.pairs ["version" .= f1])

instance HsJSONPB.FromJSONPB FieldsRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FieldsRequest"
        (\obj -> (Hs.pure FieldsRequest) <*> obj .: "version")
    )

instance HsJSONPB.ToJSON FieldsRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FieldsRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FieldsRequest where
  declareNamedSchema _ =
    do
      let declare_version = HsJSONPB.declareSchemaRef
      fieldsRequestVersion <- declare_version Proxy.Proxy
      let _ = Hs.pure FieldsRequest <*> HsJSONPB.asProxy declare_version
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FieldsRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("version", fieldsRequestVersion)]
                  }
            }
        )

data Field = Field
  { fieldName :: Hs.Text,
    fieldDescription :: Hs.Text,
    fieldType :: HsProtobuf.Enumerated Monocle.Search.Field_Type
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Field where
  nameOf _ = (Hs.fromString "Field")

instance HsProtobuf.HasDefault Field

instance HsProtobuf.Message Field where
  encodeMessage
    _
    Field
      { fieldName = fieldName,
        fieldDescription = fieldDescription,
        fieldType = fieldType
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                fieldName
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                fieldDescription
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                fieldType
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Field)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "name")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "description")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Type")))
          (HsProtobuf.Single "type")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Field where
  toJSONPB (Field f1 f2 f3) =
    ( HsJSONPB.object
        ["name" .= f1, "description" .= f2, "type" .= f3]
    )
  toEncodingPB (Field f1 f2 f3) =
    ( HsJSONPB.pairs
        ["name" .= f1, "description" .= f2, "type" .= f3]
    )

instance HsJSONPB.FromJSONPB Field where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Field"
        ( \obj ->
            (Hs.pure Field) <*> obj .: "name" <*> obj .: "description"
              <*> obj .: "type"
        )
    )

instance HsJSONPB.ToJSON Field where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Field where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Field where
  declareNamedSchema _ =
    do
      let declare_name = HsJSONPB.declareSchemaRef
      fieldName <- declare_name Proxy.Proxy
      let declare_description = HsJSONPB.declareSchemaRef
      fieldDescription <- declare_description Proxy.Proxy
      let declare_type = HsJSONPB.declareSchemaRef
      fieldType <- declare_type Proxy.Proxy
      let _ =
            Hs.pure Field <*> HsJSONPB.asProxy declare_name
              <*> HsJSONPB.asProxy declare_description
              <*> HsJSONPB.asProxy declare_type
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName = Hs.Just "Field",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("name", fieldName),
                          ("description", fieldDescription),
                          ("type", fieldType)
                        ]
                  }
            }
        )

data Field_Type
  = Field_TypeFIELD_DATE
  | Field_TypeFIELD_NUMBER
  | Field_TypeFIELD_TEXT
  | Field_TypeFIELD_BOOL
  | Field_TypeFIELD_REGEX
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Field_Type where
  nameOf _ = (Hs.fromString "Field_Type")

instance HsProtobuf.HasDefault Field_Type

instance Hs.Bounded Field_Type where
  minBound = Field_TypeFIELD_DATE
  maxBound = Field_TypeFIELD_REGEX

instance Hs.Ord Field_Type where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum Field_Type where
  toProtoEnumMay 0 = Hs.Just Field_TypeFIELD_DATE
  toProtoEnumMay 1 = Hs.Just Field_TypeFIELD_NUMBER
  toProtoEnumMay 2 = Hs.Just Field_TypeFIELD_TEXT
  toProtoEnumMay 3 = Hs.Just Field_TypeFIELD_BOOL
  toProtoEnumMay 4 = Hs.Just Field_TypeFIELD_REGEX
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (Field_TypeFIELD_DATE) = 0
  fromProtoEnum (Field_TypeFIELD_NUMBER) = 1
  fromProtoEnum (Field_TypeFIELD_TEXT) = 2
  fromProtoEnum (Field_TypeFIELD_BOOL) = 3
  fromProtoEnum (Field_TypeFIELD_REGEX) = 4

instance HsJSONPB.ToJSONPB Field_Type where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB Field_Type where
  parseJSONPB (HsJSONPB.String "FIELD_DATE") =
    Hs.pure Field_TypeFIELD_DATE
  parseJSONPB (HsJSONPB.String "FIELD_NUMBER") =
    Hs.pure Field_TypeFIELD_NUMBER
  parseJSONPB (HsJSONPB.String "FIELD_TEXT") =
    Hs.pure Field_TypeFIELD_TEXT
  parseJSONPB (HsJSONPB.String "FIELD_BOOL") =
    Hs.pure Field_TypeFIELD_BOOL
  parseJSONPB (HsJSONPB.String "FIELD_REGEX") =
    Hs.pure Field_TypeFIELD_REGEX
  parseJSONPB v = (HsJSONPB.typeMismatch "Field_Type" v)

instance HsJSONPB.ToJSON Field_Type where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Field_Type where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite Field_Type

newtype FieldsResponse = FieldsResponse
  { fieldsResponseFields ::
      Hs.Vector Monocle.Search.Field
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named FieldsResponse where
  nameOf _ = (Hs.fromString "FieldsResponse")

instance HsProtobuf.HasDefault FieldsResponse

instance HsProtobuf.Message FieldsResponse where
  encodeMessage
    _
    FieldsResponse {fieldsResponseFields = fieldsResponseFields} =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector Monocle.Search.Field)
                    @(HsProtobuf.NestedVec Monocle.Search.Field)
                    fieldsResponseFields
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure FieldsResponse)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec Monocle.Search.Field))
              @(_ (Hs.Vector Monocle.Search.Field))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Field"))
          )
          (HsProtobuf.Single "fields")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB FieldsResponse where
  toJSONPB (FieldsResponse f1) = (HsJSONPB.object ["fields" .= f1])
  toEncodingPB (FieldsResponse f1) =
    (HsJSONPB.pairs ["fields" .= f1])

instance HsJSONPB.FromJSONPB FieldsResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "FieldsResponse"
        (\obj -> (Hs.pure FieldsResponse) <*> obj .: "fields")
    )

instance HsJSONPB.ToJSON FieldsResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON FieldsResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema FieldsResponse where
  declareNamedSchema _ =
    do
      let declare_fields = HsJSONPB.declareSchemaRef
      fieldsResponseFields <- declare_fields Proxy.Proxy
      let _ = Hs.pure FieldsResponse <*> HsJSONPB.asProxy declare_fields
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "FieldsResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("fields", fieldsResponseFields)]
                  }
            }
        )

data QueryError = QueryError
  { queryErrorMessage :: Hs.Text,
    queryErrorPosition :: Hs.Word32
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named QueryError where
  nameOf _ = (Hs.fromString "QueryError")

instance HsProtobuf.HasDefault QueryError

instance HsProtobuf.Message QueryError where
  encodeMessage
    _
    QueryError
      { queryErrorMessage = queryErrorMessage,
        queryErrorPosition = queryErrorPosition
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                queryErrorMessage
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                queryErrorPosition
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure QueryError)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "message")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "position")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB QueryError where
  toJSONPB (QueryError f1 f2) =
    (HsJSONPB.object ["message" .= f1, "position" .= f2])
  toEncodingPB (QueryError f1 f2) =
    (HsJSONPB.pairs ["message" .= f1, "position" .= f2])

instance HsJSONPB.FromJSONPB QueryError where
  parseJSONPB =
    ( HsJSONPB.withObject
        "QueryError"
        ( \obj ->
            (Hs.pure QueryError) <*> obj .: "message" <*> obj .: "position"
        )
    )

instance HsJSONPB.ToJSON QueryError where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryError where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryError where
  declareNamedSchema _ =
    do
      let declare_message = HsJSONPB.declareSchemaRef
      queryErrorMessage <- declare_message Proxy.Proxy
      let declare_position = HsJSONPB.declareSchemaRef
      queryErrorPosition <- declare_position Proxy.Proxy
      let _ =
            Hs.pure QueryError <*> HsJSONPB.asProxy declare_message
              <*> HsJSONPB.asProxy declare_position
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "QueryError",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("message", queryErrorMessage),
                          ("position", queryErrorPosition)
                        ]
                  }
            }
        )

data QueryRequest = QueryRequest
  { queryRequestIndex :: Hs.Text,
    queryRequestQuery :: Hs.Text
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named QueryRequest where
  nameOf _ = (Hs.fromString "QueryRequest")

instance HsProtobuf.HasDefault QueryRequest

instance HsProtobuf.Message QueryRequest where
  encodeMessage
    _
    QueryRequest
      { queryRequestIndex = queryRequestIndex,
        queryRequestQuery = queryRequestQuery
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                queryRequestIndex
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                queryRequestQuery
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure QueryRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "index")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "query")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB QueryRequest where
  toJSONPB (QueryRequest f1 f2) =
    (HsJSONPB.object ["index" .= f1, "query" .= f2])
  toEncodingPB (QueryRequest f1 f2) =
    (HsJSONPB.pairs ["index" .= f1, "query" .= f2])

instance HsJSONPB.FromJSONPB QueryRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "QueryRequest"
        ( \obj ->
            (Hs.pure QueryRequest) <*> obj .: "index" <*> obj .: "query"
        )
    )

instance HsJSONPB.ToJSON QueryRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryRequest where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryRequest where
  declareNamedSchema _ =
    do
      let declare_index = HsJSONPB.declareSchemaRef
      queryRequestIndex <- declare_index Proxy.Proxy
      let declare_query = HsJSONPB.declareSchemaRef
      queryRequestQuery <- declare_query Proxy.Proxy
      let _ =
            Hs.pure QueryRequest <*> HsJSONPB.asProxy declare_index
              <*> HsJSONPB.asProxy declare_query
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "QueryRequest",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("index", queryRequestIndex),
                          ("query", queryRequestQuery)
                        ]
                  }
            }
        )

data File = File
  { fileAdditions :: Hs.Word32,
    fileDeletions :: Hs.Word32,
    filePath :: Hs.Text
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named File where
  nameOf _ = (Hs.fromString "File")

instance HsProtobuf.HasDefault File

instance HsProtobuf.Message File where
  encodeMessage
    _
    File
      { fileAdditions = fileAdditions,
        fileDeletions = fileDeletions,
        filePath = filePath
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                fileAdditions
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                fileDeletions
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                filePath
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure File)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "additions")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "deletions")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "path")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB File where
  toJSONPB (File f1 f2 f3) =
    ( HsJSONPB.object
        ["additions" .= f1, "deletions" .= f2, "path" .= f3]
    )
  toEncodingPB (File f1 f2 f3) =
    ( HsJSONPB.pairs
        ["additions" .= f1, "deletions" .= f2, "path" .= f3]
    )

instance HsJSONPB.FromJSONPB File where
  parseJSONPB =
    ( HsJSONPB.withObject
        "File"
        ( \obj ->
            (Hs.pure File) <*> obj .: "additions" <*> obj .: "deletions"
              <*> obj .: "path"
        )
    )

instance HsJSONPB.ToJSON File where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON File where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema File where
  declareNamedSchema _ =
    do
      let declare_additions = HsJSONPB.declareSchemaRef
      fileAdditions <- declare_additions Proxy.Proxy
      let declare_deletions = HsJSONPB.declareSchemaRef
      fileDeletions <- declare_deletions Proxy.Proxy
      let declare_path = HsJSONPB.declareSchemaRef
      filePath <- declare_path Proxy.Proxy
      let _ =
            Hs.pure File <*> HsJSONPB.asProxy declare_additions
              <*> HsJSONPB.asProxy declare_deletions
              <*> HsJSONPB.asProxy declare_path
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName = Hs.Just "File",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("additions", fileAdditions),
                          ("deletions", fileDeletions),
                          ("path", filePath)
                        ]
                  }
            }
        )

data Commit = Commit
  { commitSha :: Hs.Text,
    commitTitle :: Hs.Text,
    commitAuthor :: Hs.Text,
    commitAuthoredAt :: Hs.Maybe Google.Protobuf.Timestamp.Timestamp,
    commitCommitter :: Hs.Text,
    commitCommittedAt :: Hs.Maybe Google.Protobuf.Timestamp.Timestamp,
    commitAdditions :: Hs.Word32,
    commitDeletions :: Hs.Word32
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Commit where
  nameOf _ = (Hs.fromString "Commit")

instance HsProtobuf.HasDefault Commit

instance HsProtobuf.Message Commit where
  encodeMessage
    _
    Commit
      { commitSha = commitSha,
        commitTitle = commitTitle,
        commitAuthor = commitAuthor,
        commitAuthoredAt = commitAuthoredAt,
        commitCommitter = commitCommitter,
        commitCommittedAt = commitCommittedAt,
        commitAdditions = commitAdditions,
        commitDeletions = commitDeletions
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                commitSha
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                commitTitle
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                commitAuthor
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                    @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                    commitAuthoredAt
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                commitCommitter
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                ( Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                    @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                    commitCommittedAt
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                commitAdditions
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                commitDeletions
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Commit)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
              @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
              @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 6)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 11)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "sha")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "title")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "author")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          ( HsProtobuf.Prim
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"]))
                  )
              )
          )
          (HsProtobuf.Single "authored_at")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "committer")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          ( HsProtobuf.Prim
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"]))
                  )
              )
          )
          (HsProtobuf.Single "committed_at")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "additions")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "deletions")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Commit where
  toJSONPB (Commit f1 f2 f3 f4 f5 f6 f10 f11) =
    ( HsJSONPB.object
        [ "sha" .= f1,
          "title" .= f2,
          "author" .= f3,
          "authored_at" .= f4,
          "committer" .= f5,
          "committed_at" .= f6,
          "additions" .= f10,
          "deletions" .= f11
        ]
    )
  toEncodingPB (Commit f1 f2 f3 f4 f5 f6 f10 f11) =
    ( HsJSONPB.pairs
        [ "sha" .= f1,
          "title" .= f2,
          "author" .= f3,
          "authored_at" .= f4,
          "committer" .= f5,
          "committed_at" .= f6,
          "additions" .= f10,
          "deletions" .= f11
        ]
    )

instance HsJSONPB.FromJSONPB Commit where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Commit"
        ( \obj ->
            (Hs.pure Commit) <*> obj .: "sha" <*> obj .: "title"
              <*> obj .: "author"
              <*> obj .: "authored_at"
              <*> obj .: "committer"
              <*> obj .: "committed_at"
              <*> obj .: "additions"
              <*> obj .: "deletions"
        )
    )

instance HsJSONPB.ToJSON Commit where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Commit where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Commit where
  declareNamedSchema _ =
    do
      let declare_sha = HsJSONPB.declareSchemaRef
      commitSha <- declare_sha Proxy.Proxy
      let declare_title = HsJSONPB.declareSchemaRef
      commitTitle <- declare_title Proxy.Proxy
      let declare_author = HsJSONPB.declareSchemaRef
      commitAuthor <- declare_author Proxy.Proxy
      let declare_authored_at = HsJSONPB.declareSchemaRef
      commitAuthoredAt <- declare_authored_at Proxy.Proxy
      let declare_committer = HsJSONPB.declareSchemaRef
      commitCommitter <- declare_committer Proxy.Proxy
      let declare_committed_at = HsJSONPB.declareSchemaRef
      commitCommittedAt <- declare_committed_at Proxy.Proxy
      let declare_additions = HsJSONPB.declareSchemaRef
      commitAdditions <- declare_additions Proxy.Proxy
      let declare_deletions = HsJSONPB.declareSchemaRef
      commitDeletions <- declare_deletions Proxy.Proxy
      let _ =
            Hs.pure Commit <*> HsJSONPB.asProxy declare_sha
              <*> HsJSONPB.asProxy declare_title
              <*> HsJSONPB.asProxy declare_author
              <*> HsJSONPB.asProxy declare_authored_at
              <*> HsJSONPB.asProxy declare_committer
              <*> HsJSONPB.asProxy declare_committed_at
              <*> HsJSONPB.asProxy declare_additions
              <*> HsJSONPB.asProxy declare_deletions
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName = Hs.Just "Commit",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("sha", commitSha),
                          ("title", commitTitle),
                          ("author", commitAuthor),
                          ("authored_at", commitAuthoredAt),
                          ("committer", commitCommitter),
                          ("committed_at", commitCommittedAt),
                          ("additions", commitAdditions),
                          ("deletions", commitDeletions)
                        ]
                  }
            }
        )

data Change = Change
  { changeChangeId :: Hs.Text,
    changeAuthor :: Hs.Text,
    changeTitle :: Hs.Text,
    changeUrl :: Hs.Text,
    changeRepositoryFullname :: Hs.Text,
    changeState :: Hs.Text,
    changeBranch :: Hs.Text,
    changeTargetBranch :: Hs.Text,
    changeCreatedAt :: Hs.Maybe Google.Protobuf.Timestamp.Timestamp,
    changeUpdatedAt :: Hs.Maybe Google.Protobuf.Timestamp.Timestamp,
    changeMergedAt :: Hs.Maybe Google.Protobuf.Timestamp.Timestamp,
    changeMergedByM :: Hs.Maybe ChangeMergedByM,
    changeText :: Hs.Text,
    changeAdditions :: Hs.Word32,
    changeDeletions :: Hs.Word32,
    changeApproval :: Hs.Vector Hs.Text,
    changeAssignees :: Hs.Vector Hs.Text,
    changeLabels :: Hs.Vector Hs.Text,
    changeDraft :: Hs.Bool,
    changeMergeable :: Hs.Bool,
    changeChangedFiles :: Hs.Vector Monocle.Search.File,
    changeChangedFilesCount :: Hs.Word32,
    changeCommits :: Hs.Vector Monocle.Search.Commit,
    changeCommitsCount :: Hs.Word32,
    changeTaskData :: Hs.Vector Monocle.TaskData.TaskData
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Change where
  nameOf _ = (Hs.fromString "Change")

instance HsProtobuf.HasDefault Change

instance HsProtobuf.Message Change where
  encodeMessage
    _
    Change
      { changeChangeId = changeChangeId,
        changeAuthor = changeAuthor,
        changeTitle = changeTitle,
        changeUrl = changeUrl,
        changeRepositoryFullname = changeRepositoryFullname,
        changeState = changeState,
        changeBranch = changeBranch,
        changeTargetBranch = changeTargetBranch,
        changeCreatedAt = changeCreatedAt,
        changeUpdatedAt = changeUpdatedAt,
        changeMergedAt = changeMergedAt,
        changeMergedByM = changeMergedByM,
        changeText = changeText,
        changeAdditions = changeAdditions,
        changeDeletions = changeDeletions,
        changeApproval = changeApproval,
        changeAssignees = changeAssignees,
        changeLabels = changeLabels,
        changeDraft = changeDraft,
        changeMergeable = changeMergeable,
        changeChangedFiles = changeChangedFiles,
        changeChangedFilesCount = changeChangedFilesCount,
        changeCommits = changeCommits,
        changeCommitsCount = changeCommitsCount,
        changeTaskData = changeTaskData
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                changeChangeId
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                changeAuthor
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                changeTitle
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                changeUrl
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                changeRepositoryFullname
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                changeState
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                changeBranch
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                changeTargetBranch
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                ( Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                    @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                    changeCreatedAt
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                ( Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                    @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                    changeUpdatedAt
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                ( Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                    @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                    changeMergedAt
                )
            ),
            case changeMergedByM of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  ChangeMergedByMMergedBy y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 12)
                        (HsProtobuf.ForceEmit y)
                    ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 15)
                changeText
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 20)
                changeAdditions
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 21)
                changeDeletions
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 25)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    changeApproval
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 26)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    changeAssignees
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 27)
                ( Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                    changeLabels
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 30)
                changeDraft
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 32)
                changeMergeable
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 50)
                ( Hs.coerce @(Hs.Vector Monocle.Search.File)
                    @(HsProtobuf.NestedVec Monocle.Search.File)
                    changeChangedFiles
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 51)
                changeChangedFilesCount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 60)
                ( Hs.coerce @(Hs.Vector Monocle.Search.Commit)
                    @(HsProtobuf.NestedVec Monocle.Search.Commit)
                    changeCommits
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 61)
                changeCommitsCount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 70)
                ( Hs.coerce @(Hs.Vector Monocle.TaskData.TaskData)
                    @(HsProtobuf.NestedVec Monocle.TaskData.TaskData)
                    changeTaskData
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure Change)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 8)
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
              @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 9)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
              @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 10)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
              @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 11)
              )
          )
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 12),
                  (Hs.pure (Hs.Just Hs.. ChangeMergedByMMergedBy))
                    <*> HsProtobuf.decodeMessageField
                )
              ]
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 15)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 20)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 21)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 25)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 26)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
              @(_ (Hs.Vector Hs.Text))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 27)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 30)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 32)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec Monocle.Search.File))
              @(_ (Hs.Vector Monocle.Search.File))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 50)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 51)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec Monocle.Search.Commit))
              @(_ (Hs.Vector Monocle.Search.Commit))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 60)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 61)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec Monocle.TaskData.TaskData))
              @(_ (Hs.Vector Monocle.TaskData.TaskData))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 70)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "change_id")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "author")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "title")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "url")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "repository_fullname")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "state")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "branch")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "target_branch")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          ( HsProtobuf.Prim
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"]))
                  )
              )
          )
          (HsProtobuf.Single "created_at")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          ( HsProtobuf.Prim
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"]))
                  )
              )
          )
          (HsProtobuf.Single "updated_at")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          ( HsProtobuf.Prim
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"]))
                  )
              )
          )
          (HsProtobuf.Single "merged_at")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 15)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "text")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 20)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "additions")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 21)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "deletions")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 25)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "approval")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 26)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "assignees")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 27)
          (HsProtobuf.Repeated HsProtobuf.String)
          (HsProtobuf.Single "labels")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 30)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "draft")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 32)
          (HsProtobuf.Prim HsProtobuf.Bool)
          (HsProtobuf.Single "mergeable")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 50)
          (HsProtobuf.Repeated (HsProtobuf.Named (HsProtobuf.Single "File")))
          (HsProtobuf.Single "changed_files")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 51)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "changed_files_count")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 60)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Commit"))
          )
          (HsProtobuf.Single "commits")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 61)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "commits_count")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 70)
          ( HsProtobuf.Repeated
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("monocle_task_data" Hs.:| ["TaskData"]))
                  )
              )
          )
          (HsProtobuf.Single "task_data")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Change where
  toJSONPB
    ( Change
        f1
        f2
        f3
        f4
        f5
        f6
        f7
        f8
        f9
        f10
        f11
        f12
        f15
        f20
        f21
        f25
        f26
        f27
        f30
        f32
        f50
        f51
        f60
        f61
        f70
      ) =
      ( HsJSONPB.object
          [ "change_id" .= f1,
            "author" .= f2,
            "title" .= f3,
            "url" .= f4,
            "repository_fullname" .= f5,
            "state" .= f6,
            "branch" .= f7,
            "target_branch" .= f8,
            "created_at" .= f9,
            "updated_at" .= f10,
            "merged_at" .= f11,
            ( let encodeMerged_byM =
                    ( case f12 of
                        Hs.Just (ChangeMergedByMMergedBy f12) ->
                          (HsJSONPB.pair "merged_by" f12)
                        Hs.Nothing -> Hs.mempty
                    )
               in \options ->
                    if HsJSONPB.optEmitNamedOneof options
                      then
                        ( "merged_byM"
                            .= (HsJSONPB.objectOrNull [encodeMerged_byM] options)
                        )
                          options
                      else encodeMerged_byM options
            ),
            "text" .= f15,
            "additions" .= f20,
            "deletions" .= f21,
            "approval" .= f25,
            "assignees" .= f26,
            "labels" .= f27,
            "draft" .= f30,
            "mergeable" .= f32,
            "changed_files" .= f50,
            "changed_files_count" .= f51,
            "commits" .= f60,
            "commits_count" .= f61,
            "task_data" .= f70
          ]
      )
  toEncodingPB
    ( Change
        f1
        f2
        f3
        f4
        f5
        f6
        f7
        f8
        f9
        f10
        f11
        f12
        f15
        f20
        f21
        f25
        f26
        f27
        f30
        f32
        f50
        f51
        f60
        f61
        f70
      ) =
      ( HsJSONPB.pairs
          [ "change_id" .= f1,
            "author" .= f2,
            "title" .= f3,
            "url" .= f4,
            "repository_fullname" .= f5,
            "state" .= f6,
            "branch" .= f7,
            "target_branch" .= f8,
            "created_at" .= f9,
            "updated_at" .= f10,
            "merged_at" .= f11,
            ( let encodeMerged_byM =
                    ( case f12 of
                        Hs.Just (ChangeMergedByMMergedBy f12) ->
                          (HsJSONPB.pair "merged_by" f12)
                        Hs.Nothing -> Hs.mempty
                    )
               in \options ->
                    if HsJSONPB.optEmitNamedOneof options
                      then
                        ("merged_byM" .= (HsJSONPB.pairsOrNull [encodeMerged_byM] options))
                          options
                      else encodeMerged_byM options
            ),
            "text" .= f15,
            "additions" .= f20,
            "deletions" .= f21,
            "approval" .= f25,
            "assignees" .= f26,
            "labels" .= f27,
            "draft" .= f30,
            "mergeable" .= f32,
            "changed_files" .= f50,
            "changed_files_count" .= f51,
            "commits" .= f60,
            "commits_count" .= f61,
            "task_data" .= f70
          ]
      )

instance HsJSONPB.FromJSONPB Change where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Change"
        ( \obj ->
            (Hs.pure Change) <*> obj .: "change_id" <*> obj .: "author"
              <*> obj .: "title"
              <*> obj .: "url"
              <*> obj .: "repository_fullname"
              <*> obj .: "state"
              <*> obj .: "branch"
              <*> obj .: "target_branch"
              <*> obj .: "created_at"
              <*> obj .: "updated_at"
              <*> obj .: "merged_at"
              <*> ( let parseMerged_byM parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. ChangeMergedByMMergedBy
                                <$> (HsJSONPB.parseField parseObj "merged_by"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "merged_byM")
                            Hs.>>= (HsJSONPB.withObject "merged_byM" parseMerged_byM)
                        )
                          <|> (parseMerged_byM obj)
                  )
              <*> obj .: "text"
              <*> obj .: "additions"
              <*> obj .: "deletions"
              <*> obj .: "approval"
              <*> obj .: "assignees"
              <*> obj .: "labels"
              <*> obj .: "draft"
              <*> obj .: "mergeable"
              <*> obj .: "changed_files"
              <*> obj .: "changed_files_count"
              <*> obj .: "commits"
              <*> obj .: "commits_count"
              <*> obj .: "task_data"
        )
    )

instance HsJSONPB.ToJSON Change where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Change where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Change where
  declareNamedSchema _ =
    do
      let declare_change_id = HsJSONPB.declareSchemaRef
      changeChangeId <- declare_change_id Proxy.Proxy
      let declare_author = HsJSONPB.declareSchemaRef
      changeAuthor <- declare_author Proxy.Proxy
      let declare_title = HsJSONPB.declareSchemaRef
      changeTitle <- declare_title Proxy.Proxy
      let declare_url = HsJSONPB.declareSchemaRef
      changeUrl <- declare_url Proxy.Proxy
      let declare_repository_fullname = HsJSONPB.declareSchemaRef
      changeRepositoryFullname <- declare_repository_fullname Proxy.Proxy
      let declare_state = HsJSONPB.declareSchemaRef
      changeState <- declare_state Proxy.Proxy
      let declare_branch = HsJSONPB.declareSchemaRef
      changeBranch <- declare_branch Proxy.Proxy
      let declare_target_branch = HsJSONPB.declareSchemaRef
      changeTargetBranch <- declare_target_branch Proxy.Proxy
      let declare_created_at = HsJSONPB.declareSchemaRef
      changeCreatedAt <- declare_created_at Proxy.Proxy
      let declare_updated_at = HsJSONPB.declareSchemaRef
      changeUpdatedAt <- declare_updated_at Proxy.Proxy
      let declare_merged_at = HsJSONPB.declareSchemaRef
      changeMergedAt <- declare_merged_at Proxy.Proxy
      let declare_merged_byM = HsJSONPB.declareSchemaRef
      changeMergedByM <- declare_merged_byM Proxy.Proxy
      let declare_text = HsJSONPB.declareSchemaRef
      changeText <- declare_text Proxy.Proxy
      let declare_additions = HsJSONPB.declareSchemaRef
      changeAdditions <- declare_additions Proxy.Proxy
      let declare_deletions = HsJSONPB.declareSchemaRef
      changeDeletions <- declare_deletions Proxy.Proxy
      let declare_approval = HsJSONPB.declareSchemaRef
      changeApproval <- declare_approval Proxy.Proxy
      let declare_assignees = HsJSONPB.declareSchemaRef
      changeAssignees <- declare_assignees Proxy.Proxy
      let declare_labels = HsJSONPB.declareSchemaRef
      changeLabels <- declare_labels Proxy.Proxy
      let declare_draft = HsJSONPB.declareSchemaRef
      changeDraft <- declare_draft Proxy.Proxy
      let declare_mergeable = HsJSONPB.declareSchemaRef
      changeMergeable <- declare_mergeable Proxy.Proxy
      let declare_changed_files = HsJSONPB.declareSchemaRef
      changeChangedFiles <- declare_changed_files Proxy.Proxy
      let declare_changed_files_count = HsJSONPB.declareSchemaRef
      changeChangedFilesCount <- declare_changed_files_count Proxy.Proxy
      let declare_commits = HsJSONPB.declareSchemaRef
      changeCommits <- declare_commits Proxy.Proxy
      let declare_commits_count = HsJSONPB.declareSchemaRef
      changeCommitsCount <- declare_commits_count Proxy.Proxy
      let declare_task_data = HsJSONPB.declareSchemaRef
      changeTaskData <- declare_task_data Proxy.Proxy
      let _ =
            Hs.pure Change <*> HsJSONPB.asProxy declare_change_id
              <*> HsJSONPB.asProxy declare_author
              <*> HsJSONPB.asProxy declare_title
              <*> HsJSONPB.asProxy declare_url
              <*> HsJSONPB.asProxy declare_repository_fullname
              <*> HsJSONPB.asProxy declare_state
              <*> HsJSONPB.asProxy declare_branch
              <*> HsJSONPB.asProxy declare_target_branch
              <*> HsJSONPB.asProxy declare_created_at
              <*> HsJSONPB.asProxy declare_updated_at
              <*> HsJSONPB.asProxy declare_merged_at
              <*> HsJSONPB.asProxy declare_merged_byM
              <*> HsJSONPB.asProxy declare_text
              <*> HsJSONPB.asProxy declare_additions
              <*> HsJSONPB.asProxy declare_deletions
              <*> HsJSONPB.asProxy declare_approval
              <*> HsJSONPB.asProxy declare_assignees
              <*> HsJSONPB.asProxy declare_labels
              <*> HsJSONPB.asProxy declare_draft
              <*> HsJSONPB.asProxy declare_mergeable
              <*> HsJSONPB.asProxy declare_changed_files
              <*> HsJSONPB.asProxy declare_changed_files_count
              <*> HsJSONPB.asProxy declare_commits
              <*> HsJSONPB.asProxy declare_commits_count
              <*> HsJSONPB.asProxy declare_task_data
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName = Hs.Just "Change",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("change_id", changeChangeId),
                          ("author", changeAuthor),
                          ("title", changeTitle),
                          ("url", changeUrl),
                          ( "repository_fullname",
                            changeRepositoryFullname
                          ),
                          ("state", changeState),
                          ("branch", changeBranch),
                          ("target_branch", changeTargetBranch),
                          ("created_at", changeCreatedAt),
                          ("updated_at", changeUpdatedAt),
                          ("merged_at", changeMergedAt),
                          ("merged_byM", changeMergedByM),
                          ("text", changeText),
                          ("additions", changeAdditions),
                          ("deletions", changeDeletions),
                          ("approval", changeApproval),
                          ("assignees", changeAssignees),
                          ("labels", changeLabels),
                          ("draft", changeDraft),
                          ("mergeable", changeMergeable),
                          ("changed_files", changeChangedFiles),
                          ( "changed_files_count",
                            changeChangedFilesCount
                          ),
                          ("commits", changeCommits),
                          ("commits_count", changeCommitsCount),
                          ("task_data", changeTaskData)
                        ]
                  }
            }
        )

data ChangeMergedByM = ChangeMergedByMMergedBy Hs.Text
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChangeMergedByM where
  nameOf _ = (Hs.fromString "ChangeMergedByM")

instance HsJSONPB.ToSchema ChangeMergedByM where
  declareNamedSchema _ =
    do
      let declare_merged_by = HsJSONPB.declareSchemaRef
      changeMergedByMMergedBy <- declare_merged_by Proxy.Proxy
      let _ =
            Hs.pure ChangeMergedByMMergedBy
              <*> HsJSONPB.asProxy declare_merged_by
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChangeMergedByM",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("merged_by", changeMergedByMMergedBy)],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

newtype Changes = Changes
  { changesChanges ::
      Hs.Vector Monocle.Search.Change
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Changes where
  nameOf _ = (Hs.fromString "Changes")

instance HsProtobuf.HasDefault Changes

instance HsProtobuf.Message Changes where
  encodeMessage _ Changes {changesChanges = changesChanges} =
    ( Hs.mconcat
        [ ( HsProtobuf.encodeMessageField
              (HsProtobuf.FieldNumber 1)
              ( Hs.coerce @(Hs.Vector Monocle.Search.Change)
                  @(HsProtobuf.NestedVec Monocle.Search.Change)
                  changesChanges
              )
          )
        ]
    )
  decodeMessage _ =
    (Hs.pure Changes)
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec Monocle.Search.Change))
              @(_ (Hs.Vector Monocle.Search.Change))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Change"))
          )
          (HsProtobuf.Single "changes")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Changes where
  toJSONPB (Changes f1) = (HsJSONPB.object ["changes" .= f1])
  toEncodingPB (Changes f1) = (HsJSONPB.pairs ["changes" .= f1])

instance HsJSONPB.FromJSONPB Changes where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Changes"
        (\obj -> (Hs.pure Changes) <*> obj .: "changes")
    )

instance HsJSONPB.ToJSON Changes where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Changes where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema Changes where
  declareNamedSchema _ =
    do
      let declare_changes = HsJSONPB.declareSchemaRef
      changesChanges <- declare_changes Proxy.Proxy
      let _ = Hs.pure Changes <*> HsJSONPB.asProxy declare_changes
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "Changes",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("changes", changesChanges)]
                  }
            }
        )

newtype QueryResponse = QueryResponse
  { queryResponseResult ::
      Hs.Maybe QueryResponseResult
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named QueryResponse where
  nameOf _ = (Hs.fromString "QueryResponse")

instance HsProtobuf.HasDefault QueryResponse

instance HsProtobuf.Message QueryResponse where
  encodeMessage
    _
    QueryResponse {queryResponseResult = queryResponseResult} =
      ( Hs.mconcat
          [ case queryResponseResult of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  QueryResponseResultError y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        ( Hs.coerce @(Hs.Maybe Monocle.Search.QueryError)
                            @(HsProtobuf.Nested Monocle.Search.QueryError)
                            (Hs.Just y)
                        )
                    )
                  QueryResponseResultItems y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 2)
                        ( Hs.coerce @(Hs.Maybe Monocle.Search.Changes)
                            @(HsProtobuf.Nested Monocle.Search.Changes)
                            (Hs.Just y)
                        )
                    )
          ]
      )
  decodeMessage _ =
    (Hs.pure QueryResponse)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.fmap QueryResponseResultError))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested Monocle.Search.QueryError))
                            @(_ (Hs.Maybe Monocle.Search.QueryError))
                            HsProtobuf.decodeMessageField
                        )
                ),
                ( (HsProtobuf.FieldNumber 2),
                  (Hs.pure (Hs.fmap QueryResponseResultItems))
                    <*> ( Hs.coerce @(_ (HsProtobuf.Nested Monocle.Search.Changes))
                            @(_ (Hs.Maybe Monocle.Search.Changes))
                            HsProtobuf.decodeMessageField
                        )
                )
              ]
          )
  dotProto _ = []

instance HsJSONPB.ToJSONPB QueryResponse where
  toJSONPB (QueryResponse f1_or_f2) =
    ( HsJSONPB.object
        [ ( let encodeResult =
                  ( case f1_or_f2 of
                      Hs.Just (QueryResponseResultError f1) -> (HsJSONPB.pair "error" f1)
                      Hs.Just (QueryResponseResultItems f2) -> (HsJSONPB.pair "items" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("result" .= (HsJSONPB.objectOrNull [encodeResult] options))
                        options
                    else encodeResult options
          )
        ]
    )
  toEncodingPB (QueryResponse f1_or_f2) =
    ( HsJSONPB.pairs
        [ ( let encodeResult =
                  ( case f1_or_f2 of
                      Hs.Just (QueryResponseResultError f1) -> (HsJSONPB.pair "error" f1)
                      Hs.Just (QueryResponseResultItems f2) -> (HsJSONPB.pair "items" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("result" .= (HsJSONPB.pairsOrNull [encodeResult] options)) options
                    else encodeResult options
          )
        ]
    )

instance HsJSONPB.FromJSONPB QueryResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "QueryResponse"
        ( \obj ->
            (Hs.pure QueryResponse)
              <*> ( let parseResult parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. QueryResponseResultError
                                <$> (HsJSONPB.parseField parseObj "error"),
                              Hs.Just Hs.. QueryResponseResultItems
                                <$> (HsJSONPB.parseField parseObj "items"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "result")
                            Hs.>>= (HsJSONPB.withObject "result" parseResult)
                        )
                          <|> (parseResult obj)
                  )
        )
    )

instance HsJSONPB.ToJSON QueryResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryResponse where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryResponse where
  declareNamedSchema _ =
    do
      let declare_result = HsJSONPB.declareSchemaRef
      queryResponseResult <- declare_result Proxy.Proxy
      let _ = Hs.pure QueryResponse <*> HsJSONPB.asProxy declare_result
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "QueryResponse",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [("result", queryResponseResult)]
                  }
            }
        )

data QueryResponseResult
  = QueryResponseResultError Monocle.Search.QueryError
  | QueryResponseResultItems Monocle.Search.Changes
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named QueryResponseResult where
  nameOf _ = (Hs.fromString "QueryResponseResult")

instance HsJSONPB.ToSchema QueryResponseResult where
  declareNamedSchema _ =
    do
      let declare_error = HsJSONPB.declareSchemaRef
      queryResponseResultError <- declare_error Proxy.Proxy
      let _ =
            Hs.pure QueryResponseResultError
              <*> HsJSONPB.asProxy declare_error
      let declare_items = HsJSONPB.declareSchemaRef
      queryResponseResultItems <- declare_items Proxy.Proxy
      let _ =
            Hs.pure QueryResponseResultItems
              <*> HsJSONPB.asProxy declare_items
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "QueryResponseResult",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("error", queryResponseResultError),
                          ("items", queryResponseResultItems)
                        ],
                    HsJSONPB._schemaMinProperties = Hs.Just 1,
                    HsJSONPB._schemaMaxProperties = Hs.Just 1
                  }
            }
        )

data ChangesHistos = ChangesHistos
  { changesHistosChangeAbandonedEvent ::
      Hs.Vector Monocle.Search.ChangesHistos_Event,
    changesHistosChangeCommitForcePushedEvent ::
      Hs.Vector Monocle.Search.ChangesHistos_Event,
    changesHistosChangeCommitPushedEvent ::
      Hs.Vector Monocle.Search.ChangesHistos_Event,
    changesHistosChangeCreatedEvent ::
      Hs.Vector Monocle.Search.ChangesHistos_Event,
    changesHistosChangeMergedEvent ::
      Hs.Vector Monocle.Search.ChangesHistos_Event
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChangesHistos where
  nameOf _ = (Hs.fromString "ChangesHistos")

instance HsProtobuf.HasDefault ChangesHistos

instance HsProtobuf.Message ChangesHistos where
  encodeMessage
    _
    ChangesHistos
      { changesHistosChangeAbandonedEvent =
          changesHistosChangeAbandonedEvent,
        changesHistosChangeCommitForcePushedEvent =
          changesHistosChangeCommitForcePushedEvent,
        changesHistosChangeCommitPushedEvent =
          changesHistosChangeCommitPushedEvent,
        changesHistosChangeCreatedEvent = changesHistosChangeCreatedEvent,
        changesHistosChangeMergedEvent = changesHistosChangeMergedEvent
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Vector Monocle.Search.ChangesHistos_Event)
                    @(HsProtobuf.NestedVec Monocle.Search.ChangesHistos_Event)
                    changesHistosChangeAbandonedEvent
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Vector Monocle.Search.ChangesHistos_Event)
                    @(HsProtobuf.NestedVec Monocle.Search.ChangesHistos_Event)
                    changesHistosChangeCommitForcePushedEvent
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                ( Hs.coerce @(Hs.Vector Monocle.Search.ChangesHistos_Event)
                    @(HsProtobuf.NestedVec Monocle.Search.ChangesHistos_Event)
                    changesHistosChangeCommitPushedEvent
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Vector Monocle.Search.ChangesHistos_Event)
                    @(HsProtobuf.NestedVec Monocle.Search.ChangesHistos_Event)
                    changesHistosChangeCreatedEvent
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                ( Hs.coerce @(Hs.Vector Monocle.Search.ChangesHistos_Event)
                    @(HsProtobuf.NestedVec Monocle.Search.ChangesHistos_Event)
                    changesHistosChangeMergedEvent
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChangesHistos)
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec Monocle.Search.ChangesHistos_Event))
              @(_ (Hs.Vector Monocle.Search.ChangesHistos_Event))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec Monocle.Search.ChangesHistos_Event))
              @(_ (Hs.Vector Monocle.Search.ChangesHistos_Event))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec Monocle.Search.ChangesHistos_Event))
              @(_ (Hs.Vector Monocle.Search.ChangesHistos_Event))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec Monocle.Search.ChangesHistos_Event))
              @(_ (Hs.Vector Monocle.Search.ChangesHistos_Event))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec Monocle.Search.ChangesHistos_Event))
              @(_ (Hs.Vector Monocle.Search.ChangesHistos_Event))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 5)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Event"))
          )
          (HsProtobuf.Single "ChangeAbandonedEvent")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Event"))
          )
          (HsProtobuf.Single "ChangeCommitForcePushedEvent")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Event"))
          )
          (HsProtobuf.Single "ChangeCommitPushedEvent")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Event"))
          )
          (HsProtobuf.Single "ChangeCreatedEvent")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Event"))
          )
          (HsProtobuf.Single "ChangeMergedEvent")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChangesHistos where
  toJSONPB (ChangesHistos f1 f2 f3 f4 f5) =
    ( HsJSONPB.object
        [ "ChangeAbandonedEvent" .= f1,
          "ChangeCommitForcePushedEvent" .= f2,
          "ChangeCommitPushedEvent" .= f3,
          "ChangeCreatedEvent" .= f4,
          "ChangeMergedEvent" .= f5
        ]
    )
  toEncodingPB (ChangesHistos f1 f2 f3 f4 f5) =
    ( HsJSONPB.pairs
        [ "ChangeAbandonedEvent" .= f1,
          "ChangeCommitForcePushedEvent" .= f2,
          "ChangeCommitPushedEvent" .= f3,
          "ChangeCreatedEvent" .= f4,
          "ChangeMergedEvent" .= f5
        ]
    )

instance HsJSONPB.FromJSONPB ChangesHistos where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChangesHistos"
        ( \obj ->
            (Hs.pure ChangesHistos) <*> obj .: "ChangeAbandonedEvent"
              <*> obj .: "ChangeCommitForcePushedEvent"
              <*> obj .: "ChangeCommitPushedEvent"
              <*> obj .: "ChangeCreatedEvent"
              <*> obj .: "ChangeMergedEvent"
        )
    )

instance HsJSONPB.ToJSON ChangesHistos where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChangesHistos where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChangesHistos where
  declareNamedSchema _ =
    do
      let declare_ChangeAbandonedEvent = HsJSONPB.declareSchemaRef
      changesHistosChangeAbandonedEvent <-
        declare_ChangeAbandonedEvent
          Proxy.Proxy
      let declare_ChangeCommitForcePushedEvent =
            HsJSONPB.declareSchemaRef
      changesHistosChangeCommitForcePushedEvent <-
        declare_ChangeCommitForcePushedEvent
          Proxy.Proxy
      let declare_ChangeCommitPushedEvent = HsJSONPB.declareSchemaRef
      changesHistosChangeCommitPushedEvent <-
        declare_ChangeCommitPushedEvent
          Proxy.Proxy
      let declare_ChangeCreatedEvent = HsJSONPB.declareSchemaRef
      changesHistosChangeCreatedEvent <-
        declare_ChangeCreatedEvent
          Proxy.Proxy
      let declare_ChangeMergedEvent = HsJSONPB.declareSchemaRef
      changesHistosChangeMergedEvent <-
        declare_ChangeMergedEvent
          Proxy.Proxy
      let _ =
            Hs.pure ChangesHistos
              <*> HsJSONPB.asProxy declare_ChangeAbandonedEvent
              <*> HsJSONPB.asProxy declare_ChangeCommitForcePushedEvent
              <*> HsJSONPB.asProxy declare_ChangeCommitPushedEvent
              <*> HsJSONPB.asProxy declare_ChangeCreatedEvent
              <*> HsJSONPB.asProxy declare_ChangeMergedEvent
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChangesHistos",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "ChangeAbandonedEvent",
                            changesHistosChangeAbandonedEvent
                          ),
                          ( "ChangeCommitForcePushedEvent",
                            changesHistosChangeCommitForcePushedEvent
                          ),
                          ( "ChangeCommitPushedEvent",
                            changesHistosChangeCommitPushedEvent
                          ),
                          ( "ChangeCreatedEvent",
                            changesHistosChangeCreatedEvent
                          ),
                          ( "ChangeMergedEvent",
                            changesHistosChangeMergedEvent
                          )
                        ]
                  }
            }
        )

data ChangesHistos_Event = ChangesHistos_Event
  { changesHistos_EventDocCount ::
      Hs.Word32,
    changesHistos_EventKey :: Hs.Word64,
    changesHistos_EventKeyAsString :: Hs.Text
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChangesHistos_Event where
  nameOf _ = (Hs.fromString "ChangesHistos_Event")

instance HsProtobuf.HasDefault ChangesHistos_Event

instance HsProtobuf.Message ChangesHistos_Event where
  encodeMessage
    _
    ChangesHistos_Event
      { changesHistos_EventDocCount =
          changesHistos_EventDocCount,
        changesHistos_EventKey = changesHistos_EventKey,
        changesHistos_EventKeyAsString = changesHistos_EventKeyAsString
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                changesHistos_EventDocCount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                changesHistos_EventKey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                changesHistos_EventKeyAsString
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChangesHistos_Event)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "doc_count")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt64)
          (HsProtobuf.Single "key")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "key_as_string")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChangesHistos_Event where
  toJSONPB (ChangesHistos_Event f1 f2 f3) =
    ( HsJSONPB.object
        ["doc_count" .= f1, "key" .= f2, "key_as_string" .= f3]
    )
  toEncodingPB (ChangesHistos_Event f1 f2 f3) =
    ( HsJSONPB.pairs
        ["doc_count" .= f1, "key" .= f2, "key_as_string" .= f3]
    )

instance HsJSONPB.FromJSONPB ChangesHistos_Event where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChangesHistos_Event"
        ( \obj ->
            (Hs.pure ChangesHistos_Event) <*> obj .: "doc_count"
              <*> obj .: "key"
              <*> obj .: "key_as_string"
        )
    )

instance HsJSONPB.ToJSON ChangesHistos_Event where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChangesHistos_Event where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChangesHistos_Event where
  declareNamedSchema _ =
    do
      let declare_doc_count = HsJSONPB.declareSchemaRef
      changesHistos_EventDocCount <- declare_doc_count Proxy.Proxy
      let declare_key = HsJSONPB.declareSchemaRef
      changesHistos_EventKey <- declare_key Proxy.Proxy
      let declare_key_as_string = HsJSONPB.declareSchemaRef
      changesHistos_EventKeyAsString <- declare_key_as_string Proxy.Proxy
      let _ =
            Hs.pure ChangesHistos_Event
              <*> HsJSONPB.asProxy declare_doc_count
              <*> HsJSONPB.asProxy declare_key
              <*> HsJSONPB.asProxy declare_key_as_string
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChangesHistos_Event",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ("doc_count", changesHistos_EventDocCount),
                          ("key", changesHistos_EventKey),
                          ( "key_as_string",
                            changesHistos_EventKeyAsString
                          )
                        ]
                  }
            }
        )

data ChangesLifecycle = ChangesLifecycle
  { changesLifecycleChangeCommitForcePushedEvent ::
      Hs.Maybe Monocle.Search.ChangesLifecycle_Event,
    changesLifecycleChangeCommitPushedEvent ::
      Hs.Maybe Monocle.Search.ChangesLifecycle_Event,
    changesLifecycleChangeCreatedEvent ::
      Hs.Maybe Monocle.Search.ChangesLifecycle_Event,
    changesLifecycleAbandoned :: Hs.Word32,
    changesLifecycleCommits :: Hs.Float,
    changesLifecycleDuration :: Hs.Float,
    changesLifecycleDurationVariability :: Hs.Float,
    changesLifecycleHistos ::
      Hs.Maybe Monocle.Search.ChangesHistos,
    changesLifecycleMerged :: Hs.Word32,
    changesLifecycleOpened :: Hs.Word32,
    changesLifecycleRatios ::
      Hs.Maybe Monocle.Search.ChangesLifecycle_Ratios,
    changesLifecycleSelfMerged :: Hs.Word32,
    changesLifecycleTests :: Hs.Float
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChangesLifecycle where
  nameOf _ = (Hs.fromString "ChangesLifecycle")

instance HsProtobuf.HasDefault ChangesLifecycle

instance HsProtobuf.Message ChangesLifecycle where
  encodeMessage
    _
    ChangesLifecycle
      { changesLifecycleChangeCommitForcePushedEvent =
          changesLifecycleChangeCommitForcePushedEvent,
        changesLifecycleChangeCommitPushedEvent =
          changesLifecycleChangeCommitPushedEvent,
        changesLifecycleChangeCreatedEvent =
          changesLifecycleChangeCreatedEvent,
        changesLifecycleAbandoned = changesLifecycleAbandoned,
        changesLifecycleCommits = changesLifecycleCommits,
        changesLifecycleDuration = changesLifecycleDuration,
        changesLifecycleDurationVariability =
          changesLifecycleDurationVariability,
        changesLifecycleHistos = changesLifecycleHistos,
        changesLifecycleMerged = changesLifecycleMerged,
        changesLifecycleOpened = changesLifecycleOpened,
        changesLifecycleRatios = changesLifecycleRatios,
        changesLifecycleSelfMerged = changesLifecycleSelfMerged,
        changesLifecycleTests = changesLifecycleTests
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe Monocle.Search.ChangesLifecycle_Event)
                    @(HsProtobuf.Nested Monocle.Search.ChangesLifecycle_Event)
                    changesLifecycleChangeCommitForcePushedEvent
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Maybe Monocle.Search.ChangesLifecycle_Event)
                    @(HsProtobuf.Nested Monocle.Search.ChangesLifecycle_Event)
                    changesLifecycleChangeCommitPushedEvent
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                ( Hs.coerce @(Hs.Maybe Monocle.Search.ChangesLifecycle_Event)
                    @(HsProtobuf.Nested Monocle.Search.ChangesLifecycle_Event)
                    changesLifecycleChangeCreatedEvent
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                changesLifecycleAbandoned
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                changesLifecycleCommits
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                changesLifecycleDuration
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                changesLifecycleDurationVariability
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                ( Hs.coerce @(Hs.Maybe Monocle.Search.ChangesHistos)
                    @(HsProtobuf.Nested Monocle.Search.ChangesHistos)
                    changesLifecycleHistos
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 9)
                changesLifecycleMerged
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 10)
                changesLifecycleOpened
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                ( Hs.coerce @(Hs.Maybe Monocle.Search.ChangesLifecycle_Ratios)
                    @(HsProtobuf.Nested Monocle.Search.ChangesLifecycle_Ratios)
                    changesLifecycleRatios
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 12)
                changesLifecycleSelfMerged
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                changesLifecycleTests
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChangesLifecycle)
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested Monocle.Search.ChangesLifecycle_Event))
              @(_ (Hs.Maybe Monocle.Search.ChangesLifecycle_Event))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested Monocle.Search.ChangesLifecycle_Event))
              @(_ (Hs.Maybe Monocle.Search.ChangesLifecycle_Event))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested Monocle.Search.ChangesLifecycle_Event))
              @(_ (Hs.Maybe Monocle.Search.ChangesLifecycle_Event))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 5)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 6)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 7)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested Monocle.Search.ChangesHistos))
              @(_ (Hs.Maybe Monocle.Search.ChangesHistos))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 8)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 9)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 10)
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested Monocle.Search.ChangesLifecycle_Ratios))
              @(_ (Hs.Maybe Monocle.Search.ChangesLifecycle_Ratios))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 11)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 12)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 13)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Event")))
          (HsProtobuf.Single "ChangeCommitForcePushedEvent")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Event")))
          (HsProtobuf.Single "ChangeCommitPushedEvent")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Event")))
          (HsProtobuf.Single "ChangeCreatedEvent")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "abandoned")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          (HsProtobuf.Prim HsProtobuf.Float)
          (HsProtobuf.Single "commits")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          (HsProtobuf.Prim HsProtobuf.Float)
          (HsProtobuf.Single "duration")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          (HsProtobuf.Prim HsProtobuf.Float)
          (HsProtobuf.Single "duration_variability")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          ( HsProtobuf.Prim
              (HsProtobuf.Named (HsProtobuf.Single "ChangesHistos"))
          )
          (HsProtobuf.Single "histos")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 9)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "merged")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 10)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "opened")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 11)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Ratios")))
          (HsProtobuf.Single "ratios")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 12)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "self_merged")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 13)
          (HsProtobuf.Prim HsProtobuf.Float)
          (HsProtobuf.Single "tests")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChangesLifecycle where
  toJSONPB
    (ChangesLifecycle f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13) =
      ( HsJSONPB.object
          [ "ChangeCommitForcePushedEvent" .= f1,
            "ChangeCommitPushedEvent" .= f2,
            "ChangeCreatedEvent" .= f3,
            "abandoned" .= f4,
            "commits" .= f5,
            "duration" .= f6,
            "duration_variability" .= f7,
            "histos" .= f8,
            "merged" .= f9,
            "opened" .= f10,
            "ratios" .= f11,
            "self_merged" .= f12,
            "tests" .= f13
          ]
      )
  toEncodingPB
    (ChangesLifecycle f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13) =
      ( HsJSONPB.pairs
          [ "ChangeCommitForcePushedEvent" .= f1,
            "ChangeCommitPushedEvent" .= f2,
            "ChangeCreatedEvent" .= f3,
            "abandoned" .= f4,
            "commits" .= f5,
            "duration" .= f6,
            "duration_variability" .= f7,
            "histos" .= f8,
            "merged" .= f9,
            "opened" .= f10,
            "ratios" .= f11,
            "self_merged" .= f12,
            "tests" .= f13
          ]
      )

instance HsJSONPB.FromJSONPB ChangesLifecycle where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChangesLifecycle"
        ( \obj ->
            (Hs.pure ChangesLifecycle)
              <*> obj .: "ChangeCommitForcePushedEvent"
              <*> obj .: "ChangeCommitPushedEvent"
              <*> obj .: "ChangeCreatedEvent"
              <*> obj .: "abandoned"
              <*> obj .: "commits"
              <*> obj .: "duration"
              <*> obj .: "duration_variability"
              <*> obj .: "histos"
              <*> obj .: "merged"
              <*> obj .: "opened"
              <*> obj .: "ratios"
              <*> obj .: "self_merged"
              <*> obj .: "tests"
        )
    )

instance HsJSONPB.ToJSON ChangesLifecycle where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChangesLifecycle where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChangesLifecycle where
  declareNamedSchema _ =
    do
      let declare_ChangeCommitForcePushedEvent =
            HsJSONPB.declareSchemaRef
      changesLifecycleChangeCommitForcePushedEvent <-
        declare_ChangeCommitForcePushedEvent
          Proxy.Proxy
      let declare_ChangeCommitPushedEvent = HsJSONPB.declareSchemaRef
      changesLifecycleChangeCommitPushedEvent <-
        declare_ChangeCommitPushedEvent
          Proxy.Proxy
      let declare_ChangeCreatedEvent = HsJSONPB.declareSchemaRef
      changesLifecycleChangeCreatedEvent <-
        declare_ChangeCreatedEvent
          Proxy.Proxy
      let declare_abandoned = HsJSONPB.declareSchemaRef
      changesLifecycleAbandoned <- declare_abandoned Proxy.Proxy
      let declare_commits = HsJSONPB.declareSchemaRef
      changesLifecycleCommits <- declare_commits Proxy.Proxy
      let declare_duration = HsJSONPB.declareSchemaRef
      changesLifecycleDuration <- declare_duration Proxy.Proxy
      let declare_duration_variability = HsJSONPB.declareSchemaRef
      changesLifecycleDurationVariability <-
        declare_duration_variability
          Proxy.Proxy
      let declare_histos = HsJSONPB.declareSchemaRef
      changesLifecycleHistos <- declare_histos Proxy.Proxy
      let declare_merged = HsJSONPB.declareSchemaRef
      changesLifecycleMerged <- declare_merged Proxy.Proxy
      let declare_opened = HsJSONPB.declareSchemaRef
      changesLifecycleOpened <- declare_opened Proxy.Proxy
      let declare_ratios = HsJSONPB.declareSchemaRef
      changesLifecycleRatios <- declare_ratios Proxy.Proxy
      let declare_self_merged = HsJSONPB.declareSchemaRef
      changesLifecycleSelfMerged <- declare_self_merged Proxy.Proxy
      let declare_tests = HsJSONPB.declareSchemaRef
      changesLifecycleTests <- declare_tests Proxy.Proxy
      let _ =
            Hs.pure ChangesLifecycle
              <*> HsJSONPB.asProxy declare_ChangeCommitForcePushedEvent
              <*> HsJSONPB.asProxy declare_ChangeCommitPushedEvent
              <*> HsJSONPB.asProxy declare_ChangeCreatedEvent
              <*> HsJSONPB.asProxy declare_abandoned
              <*> HsJSONPB.asProxy declare_commits
              <*> HsJSONPB.asProxy declare_duration
              <*> HsJSONPB.asProxy declare_duration_variability
              <*> HsJSONPB.asProxy declare_histos
              <*> HsJSONPB.asProxy declare_merged
              <*> HsJSONPB.asProxy declare_opened
              <*> HsJSONPB.asProxy declare_ratios
              <*> HsJSONPB.asProxy declare_self_merged
              <*> HsJSONPB.asProxy declare_tests
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChangesLifecycle",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "ChangeCommitForcePushedEvent",
                            changesLifecycleChangeCommitForcePushedEvent
                          ),
                          ( "ChangeCommitPushedEvent",
                            changesLifecycleChangeCommitPushedEvent
                          ),
                          ( "ChangeCreatedEvent",
                            changesLifecycleChangeCreatedEvent
                          ),
                          ("abandoned", changesLifecycleAbandoned),
                          ("commits", changesLifecycleCommits),
                          ("duration", changesLifecycleDuration),
                          ( "duration_variability",
                            changesLifecycleDurationVariability
                          ),
                          ("histos", changesLifecycleHistos),
                          ("merged", changesLifecycleMerged),
                          ("opened", changesLifecycleOpened),
                          ("ratios", changesLifecycleRatios),
                          ("self_merged", changesLifecycleSelfMerged),
                          ("tests", changesLifecycleTests)
                        ]
                  }
            }
        )

data ChangesLifecycle_Event = ChangesLifecycle_Event
  { changesLifecycle_EventAuthorsCount ::
      Hs.Word32,
    changesLifecycle_EventEventsCount :: Hs.Word32
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChangesLifecycle_Event where
  nameOf _ = (Hs.fromString "ChangesLifecycle_Event")

instance HsProtobuf.HasDefault ChangesLifecycle_Event

instance HsProtobuf.Message ChangesLifecycle_Event where
  encodeMessage
    _
    ChangesLifecycle_Event
      { changesLifecycle_EventAuthorsCount =
          changesLifecycle_EventAuthorsCount,
        changesLifecycle_EventEventsCount =
          changesLifecycle_EventEventsCount
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                changesLifecycle_EventAuthorsCount
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                changesLifecycle_EventEventsCount
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChangesLifecycle_Event)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "authors_count")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "events_count")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChangesLifecycle_Event where
  toJSONPB (ChangesLifecycle_Event f1 f2) =
    (HsJSONPB.object ["authors_count" .= f1, "events_count" .= f2])
  toEncodingPB (ChangesLifecycle_Event f1 f2) =
    (HsJSONPB.pairs ["authors_count" .= f1, "events_count" .= f2])

instance HsJSONPB.FromJSONPB ChangesLifecycle_Event where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChangesLifecycle_Event"
        ( \obj ->
            (Hs.pure ChangesLifecycle_Event) <*> obj .: "authors_count"
              <*> obj .: "events_count"
        )
    )

instance HsJSONPB.ToJSON ChangesLifecycle_Event where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChangesLifecycle_Event where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChangesLifecycle_Event where
  declareNamedSchema _ =
    do
      let declare_authors_count = HsJSONPB.declareSchemaRef
      changesLifecycle_EventAuthorsCount <-
        declare_authors_count
          Proxy.Proxy
      let declare_events_count = HsJSONPB.declareSchemaRef
      changesLifecycle_EventEventsCount <-
        declare_events_count
          Proxy.Proxy
      let _ =
            Hs.pure ChangesLifecycle_Event
              <*> HsJSONPB.asProxy declare_authors_count
              <*> HsJSONPB.asProxy declare_events_count
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChangesLifecycle_Event",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "authors_count",
                            changesLifecycle_EventAuthorsCount
                          ),
                          ( "events_count",
                            changesLifecycle_EventEventsCount
                          )
                        ]
                  }
            }
        )

data ChangesLifecycle_Ratios = ChangesLifecycle_Ratios
  { changesLifecycle_RatiosAbandoned ::
      Hs.Float,
    changesLifecycle_RatiosIterations ::
      Hs.Float,
    changesLifecycle_RatiosMerged :: Hs.Float,
    changesLifecycle_RatiosSelfMerged ::
      Hs.Float
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named ChangesLifecycle_Ratios where
  nameOf _ = (Hs.fromString "ChangesLifecycle_Ratios")

instance HsProtobuf.HasDefault ChangesLifecycle_Ratios

instance HsProtobuf.Message ChangesLifecycle_Ratios where
  encodeMessage
    _
    ChangesLifecycle_Ratios
      { changesLifecycle_RatiosAbandoned =
          changesLifecycle_RatiosAbandoned,
        changesLifecycle_RatiosIterations =
          changesLifecycle_RatiosIterations,
        changesLifecycle_RatiosMerged = changesLifecycle_RatiosMerged,
        changesLifecycle_RatiosSelfMerged =
          changesLifecycle_RatiosSelfMerged
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                changesLifecycle_RatiosAbandoned
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                changesLifecycle_RatiosIterations
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                changesLifecycle_RatiosMerged
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                changesLifecycle_RatiosSelfMerged
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure ChangesLifecycle_Ratios)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.Float)
          (HsProtobuf.Single "abandoned")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.Float)
          (HsProtobuf.Single "iterations")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.Float)
          (HsProtobuf.Single "merged")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.Float)
          (HsProtobuf.Single "self_merged")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB ChangesLifecycle_Ratios where
  toJSONPB (ChangesLifecycle_Ratios f1 f2 f3 f4) =
    ( HsJSONPB.object
        [ "abandoned" .= f1,
          "iterations" .= f2,
          "merged" .= f3,
          "self_merged" .= f4
        ]
    )
  toEncodingPB (ChangesLifecycle_Ratios f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        [ "abandoned" .= f1,
          "iterations" .= f2,
          "merged" .= f3,
          "self_merged" .= f4
        ]
    )

instance HsJSONPB.FromJSONPB ChangesLifecycle_Ratios where
  parseJSONPB =
    ( HsJSONPB.withObject
        "ChangesLifecycle_Ratios"
        ( \obj ->
            (Hs.pure ChangesLifecycle_Ratios) <*> obj .: "abandoned"
              <*> obj .: "iterations"
              <*> obj .: "merged"
              <*> obj .: "self_merged"
        )
    )

instance HsJSONPB.ToJSON ChangesLifecycle_Ratios where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ChangesLifecycle_Ratios where
  parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ChangesLifecycle_Ratios where
  declareNamedSchema _ =
    do
      let declare_abandoned = HsJSONPB.declareSchemaRef
      changesLifecycle_RatiosAbandoned <- declare_abandoned Proxy.Proxy
      let declare_iterations = HsJSONPB.declareSchemaRef
      changesLifecycle_RatiosIterations <- declare_iterations Proxy.Proxy
      let declare_merged = HsJSONPB.declareSchemaRef
      changesLifecycle_RatiosMerged <- declare_merged Proxy.Proxy
      let declare_self_merged = HsJSONPB.declareSchemaRef
      changesLifecycle_RatiosSelfMerged <-
        declare_self_merged
          Proxy.Proxy
      let _ =
            Hs.pure ChangesLifecycle_Ratios
              <*> HsJSONPB.asProxy declare_abandoned
              <*> HsJSONPB.asProxy declare_iterations
              <*> HsJSONPB.asProxy declare_merged
              <*> HsJSONPB.asProxy declare_self_merged
      Hs.return
        ( HsJSONPB.NamedSchema
            { HsJSONPB._namedSchemaName =
                Hs.Just "ChangesLifecycle_Ratios",
              HsJSONPB._namedSchemaSchema =
                Hs.mempty
                  { HsJSONPB._schemaParamSchema =
                      Hs.mempty
                        { HsJSONPB._paramSchemaType =
                            Hs.Just HsJSONPB.SwaggerObject
                        },
                    HsJSONPB._schemaProperties =
                      HsJSONPB.insOrdFromList
                        [ ( "abandoned",
                            changesLifecycle_RatiosAbandoned
                          ),
                          ( "iterations",
                            changesLifecycle_RatiosIterations
                          ),
                          ("merged", changesLifecycle_RatiosMerged),
                          ( "self_merged",
                            changesLifecycle_RatiosSelfMerged
                          )
                        ]
                  }
            }
        )
